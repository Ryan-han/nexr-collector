# The configuration file needs to define the sources,
# the channels and the sinks.
# Sources, channels and sinks are defined per agent,
# in this case called 'agent'

agent.sources = LtasSrc1 LtasSrc2 LtasSrc3 LtasSrc4
agent.channels = memch1 memch2 memch3 memch4
agent.sinks = XtasHDFS1 XtasHDFS2 XtasHDFS3 XtasHDFS4

# For each one of the sources, the type is defined
agent.sources.LtasSrc1.type = spooldir
agent.sources.LtasSrc1.spoolDir = ${uploader_directory1}
agent.sources.LtasSrc1.deletePolicy = never
agent.sources.LtasSrc1.batchSize = 100
agent.sources.LtasSrc1.bufferMaxLineLength = 80000
agent.sources.LtasSrc1.fileHeader = true
agent.sources.LtasSrc1.fileHeaderKey = file
agent.sources.LtasSrc1.basenameHeader = true

# For each one of the sources, the type is defined
agent.sources.LtasSrc2.type = spooldir
agent.sources.LtasSrc2.spoolDir = ${uploader_directory2}
agent.sources.LtasSrc2.deletePolicy = never
agent.sources.LtasSrc2.batchSize = 100
agent.sources.LtasSrc2.bufferMaxLineLength = 80000
agent.sources.LtasSrc2.fileHeader = true
agent.sources.LtasSrc2.fileHeaderKey = file
agent.sources.LtasSrc2.basenameHeader = true

# For each one of the sources, the type is defined
agent.sources.LtasSrc3.type = spooldir
agent.sources.LtasSrc3.spoolDir = ${uploader_directory3}
agent.sources.LtasSrc3.deletePolicy = never
agent.sources.LtasSrc3.batchSize = 100
agent.sources.LtasSrc3.bufferMaxLineLength = 80000
agent.sources.LtasSrc3.fileHeader = true
agent.sources.LtasSrc3.fileHeaderKey = file
agent.sources.LtasSrc3.basenameHeader = true

# For each one of the sources, the type is defined
agent.sources.LtasSrc4.type = spooldir
agent.sources.LtasSrc4.spoolDir = ${uploader_directory4}
agent.sources.LtasSrc4.deletePolicy = never
agent.sources.LtasSrc4.batchSize = 100
agent.sources.LtasSrc4.bufferMaxLineLength = 80000
agent.sources.LtasSrc4.fileHeader = true
agent.sources.LtasSrc4.fileHeaderKey = file
agent.sources.LtasSrc4.basenameHeader = true

# Interceptors for LtasSrc1
agent.sources.LtasSrc1.interceptors = timeInterceptor hostInterceptor datatypeInterceptor
agent.sources.LtasSrc1.interceptors.timeInterceptor.type = timestamp
agent.sources.LtasSrc1.interceptors.timeInterceptor.preserveExisting = true
agent.sources.LtasSrc1.interceptors.hostInterceptor.type = host
agent.sources.LtasSrc1.interceptors.hostInterceptor.useIP = false
agent.sources.LtasSrc1.interceptors.hostInterceptor.hostHeader = hostname
agent.sources.LtasSrc1.interceptors.datatypeInterceptor.type = com.nexr.interceptor.DataTypeExtractorInterceptor$Builder
agent.sources.LtasSrc1.interceptors.datatypeInterceptor.datatypeHeader = datatype
agent.sources.LtasSrc1.interceptors.datatypeInterceptor.sinkCount = 20

# Interceptors for LtasSrc2
agent.sources.LtasSrc2.interceptors = timeInterceptor hostInterceptor datatypeInterceptor
agent.sources.LtasSrc2.interceptors.timeInterceptor.type = timestamp
agent.sources.LtasSrc2.interceptors.timeInterceptor.preserveExisting = true
agent.sources.LtasSrc2.interceptors.hostInterceptor.type = host
agent.sources.LtasSrc2.interceptors.hostInterceptor.useIP = false
agent.sources.LtasSrc2.interceptors.hostInterceptor.hostHeader = hostname
agent.sources.LtasSrc2.interceptors.datatypeInterceptor.type = com.nexr.interceptor.DataTypeExtractorInterceptor$Builder
agent.sources.LtasSrc2.interceptors.datatypeInterceptor.datatypeHeader = datatype
agent.sources.LtasSrc2.interceptors.datatypeInterceptor.sinkCount = 20

# Interceptors for LtasSrc3
agent.sources.LtasSrc3.interceptors = timeInterceptor hostInterceptor datatypeInterceptor
agent.sources.LtasSrc3.interceptors.timeInterceptor.type = timestamp
agent.sources.LtasSrc3.interceptors.timeInterceptor.preserveExisting = true
agent.sources.LtasSrc3.interceptors.hostInterceptor.type = host
agent.sources.LtasSrc3.interceptors.hostInterceptor.useIP = false
agent.sources.LtasSrc3.interceptors.hostInterceptor.hostHeader = hostname
agent.sources.LtasSrc3.interceptors.datatypeInterceptor.type = com.nexr.interceptor.DataTypeExtractorInterceptor$Builder
agent.sources.LtasSrc3.interceptors.datatypeInterceptor.datatypeHeader = datatype
agent.sources.LtasSrc3.interceptors.datatypeInterceptor.sinkCount = 20

# Interceptors for LtasSrc4
agent.sources.LtasSrc4.interceptors = timeInterceptor hostInterceptor datatypeInterceptor
agent.sources.LtasSrc4.interceptors.timeInterceptor.type = timestamp
agent.sources.LtasSrc4.interceptors.timeInterceptor.preserveExisting = true
agent.sources.LtasSrc4.interceptors.hostInterceptor.type = host
agent.sources.LtasSrc4.interceptors.hostInterceptor.useIP = false
agent.sources.LtasSrc4.interceptors.hostInterceptor.hostHeader = hostname
agent.sources.LtasSrc4.interceptors.datatypeInterceptor.type = com.nexr.interceptor.DataTypeExtractorInterceptor$Builder
agent.sources.LtasSrc4.interceptors.datatypeInterceptor.datatypeHeader = datatype
agent.sources.LtasSrc4.interceptors.datatypeInterceptor.sinkCount = 20


# The channel can be defined as follows.
agent.sources.LtasSrc1.channels = memch1
agent.sources.LtasSrc2.channels = memch2
agent.sources.LtasSrc3.channels = memch3
agent.sources.LtasSrc4.channels = memch4

# Each sink's
agent.sinks.XtasHDFS1.type = hdfs
agent.sinks.XtasHDFS1.hdfs.path = ${name_node}/user/ndap/%{hostname}/%{datatype}/%{hmpath}
agent.sinks.XtasHDFS1.hdfs.fileType = DataStream
agent.sinks.XtasHDFS1.hdfs.filePrefix = %{basename}.1
agent.sinks.XtasHDFS1.hdfs.round = true
agent.sinks.XtasHDFS1.hdfs.roundValue = 10
agent.sinks.XtasHDFS1.hdfs.roundUnit = minute
agent.sinks.XtasHDFS1.hdfs.writeFormat = Text
agent.sinks.XtasHDFS1.hdfs.threadsPoolSize = 30
agent.sinks.XtasHDFS1.hdfs.rollTimerPoolSize = 10
agent.sinks.XtasHDFS1.hdfs.rollSize = 0
agent.sinks.XtasHDFS1.hdfs.rollCount = 0
agent.sinks.XtasHDFS1.hdfs.rollInterval = 0
agent.sinks.XtasHDFS1.hdfs.idleTimeout = 100
agent.sinks.XtasHDFS1.hdfs.callTimeout = 600000
agent.sinks.XtasHDFS1.hdfs.batchSize = 10000
agent.sinks.XtasHDFS1.hdfs.closeTries = 2
agent.sinks.XtasHDFS1.hdfs.retryInterval = 10
agent.sinks.XtasHDFS1.channel = memch1

agent.sinks.XtasHDFS2.type = hdfs
agent.sinks.XtasHDFS2.hdfs.path = ${name_node}/user/ndap/%{hostname}/%{datatype}/%{hmpath}
agent.sinks.XtasHDFS2.hdfs.fileType = DataStream
agent.sinks.XtasHDFS2.hdfs.filePrefix = %{basename}.2
agent.sinks.XtasHDFS2.hdfs.round = true
agent.sinks.XtasHDFS2.hdfs.roundValue = 10
agent.sinks.XtasHDFS2.hdfs.roundUnit = minute
agent.sinks.XtasHDFS2.hdfs.writeFormat = Text
agent.sinks.XtasHDFS2.hdfs.threadsPoolSize = 30
agent.sinks.XtasHDFS2.hdfs.rollTimerPoolSize = 10
agent.sinks.XtasHDFS2.hdfs.rollSize = 0
agent.sinks.XtasHDFS2.hdfs.rollCount = 0
agent.sinks.XtasHDFS2.hdfs.rollInterval = 0
agent.sinks.XtasHDFS2.hdfs.idleTimeout = 100
agent.sinks.XtasHDFS2.hdfs.callTimeout = 600000
agent.sinks.XtasHDFS2.hdfs.batchSize = 10000
agent.sinks.XtasHDFS2.hdfs.closeTries = 2
agent.sinks.XtasHDFS2.hdfs.retryInterval = 10
agent.sinks.XtasHDFS2.channel = memch2

agent.sinks.XtasHDFS3.type = hdfs
agent.sinks.XtasHDFS3.hdfs.path = ${name_node}/user/ndap/%{hostname}/%{datatype}/%{hmpath}
agent.sinks.XtasHDFS3.hdfs.fileType = DataStream
agent.sinks.XtasHDFS3.hdfs.filePrefix = %{basename}.3
agent.sinks.XtasHDFS3.hdfs.round = true
agent.sinks.XtasHDFS3.hdfs.roundValue = 10
agent.sinks.XtasHDFS3.hdfs.roundUnit = minute
agent.sinks.XtasHDFS3.hdfs.writeFormat = Text
agent.sinks.XtasHDFS3.hdfs.threadsPoolSize = 30
agent.sinks.XtasHDFS3.hdfs.rollTimerPoolSize = 10
agent.sinks.XtasHDFS3.hdfs.rollSize = 0
agent.sinks.XtasHDFS3.hdfs.rollCount = 0
agent.sinks.XtasHDFS3.hdfs.rollInterval = 0
agent.sinks.XtasHDFS3.hdfs.idleTimeout = 100
agent.sinks.XtasHDFS3.hdfs.callTimeout = 600000
agent.sinks.XtasHDFS3.hdfs.batchSize = 10000
agent.sinks.XtasHDFS3.hdfs.closeTries = 2
agent.sinks.XtasHDFS3.hdfs.retryInterval = 10
agent.sinks.XtasHDFS3.channel = memch3

agent.sinks.XtasHDFS4.type = hdfs
agent.sinks.XtasHDFS4.hdfs.path = ${name_node}/user/ndap/user/ndap/%{hostname}/%{datatype}/%{hmpath}
agent.sinks.XtasHDFS4.hdfs.fileType = DataStream
agent.sinks.XtasHDFS4.hdfs.filePrefix = %{basename}.4
agent.sinks.XtasHDFS4.hdfs.round = true
agent.sinks.XtasHDFS4.hdfs.roundValue = 10
agent.sinks.XtasHDFS4.hdfs.roundUnit = minute
agent.sinks.XtasHDFS4.hdfs.writeFormat = Text
agent.sinks.XtasHDFS4.hdfs.threadsPoolSize = 30
agent.sinks.XtasHDFS4.hdfs.rollTimerPoolSize = 10
agent.sinks.XtasHDFS4.hdfs.rollSize = 0
agent.sinks.XtasHDFS4.hdfs.rollCount = 0
agent.sinks.XtasHDFS4.hdfs.rollInterval = 0
agent.sinks.XtasHDFS4.hdfs.idleTimeout = 100
agent.sinks.XtasHDFS4.hdfs.callTimeout = 600000
agent.sinks.XtasHDFS4.hdfs.batchSize = 10000
agent.sinks.XtasHDFS4.hdfs.closeTries = 2
agent.sinks.XtasHDFS4.hdfs.retryInterval = 10
agent.sinks.XtasHDFS4.channel = memch4

# Each channel's type is defined.
agent.channels.memch1.type = memory
agent.channels.memch1.capacity = 1000000
agent.channels.memch1.transactionCapacity = 10000
agent.channels.memch2.type = memory
agent.channels.memch2.capacity = 1000000
agent.channels.memch2.transactionCapacity = 10000
agent.channels.memch3.type = memory
agent.channels.memch3.capacity = 1000000
agent.channels.memch3.transactionCapacity = 10000
agent.channels.memch4.type = memory
agent.channels.memch4.capacity = 1000000
agent.channels.memch4.transactionCapacity = 10000